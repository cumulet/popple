[gd_resource type="Shader" format=3 uid="uid://cioqeasj5a5jb"]

[resource]
code = "shader_type spatial;

uniform vec4 albedo : source_color = vec4(1.0);
uniform sampler2D texture_albedo;
uniform sampler2D texture_normal;
uniform sampler2D texture_rough;
uniform sampler2D texture_alpha;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	vec2 moving_uv = UV + TIME*-0.1*vec2(0,1);
	vec4 albedo_tex = texture(texture_albedo, moving_uv);
	vec4 normal_tex = texture(texture_normal, moving_uv);
	float rough_tex = texture(texture_rough, moving_uv).r;
	float alpha_tex = texture(texture_alpha, moving_uv).r;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	NORMAL = normal_tex.rgb;
	ROUGHNESS = rough_tex;
	ALPHA = 1.0;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"
